---
export interface Props {
  wallpapers: string[];
}

const { wallpapers } = Astro.props;

const wallperperVars: { [key: string]: string } = {};
wallpapers.forEach((src, idx) => {
  if (src) wallperperVars[`wallpaper-${idx}`] = `url(${src})`;
});
---

<input data-nosnippet type="checkbox" id="show-wallpaper" />
<label for="show-wallpaper" id="show-wallpaper-lbl"
  ><div data-nosnippet>Show <strong>Space</strong><b>Mission</b></div>
</label>
<div data-nosnippet id="wallpaper" class="wallpaper">
  <div></div>
</div>
<style is:global define:vars={{ ...wallperperVars }}>
  /* Wallpaper */

  @keyframes wallpapers {
    0.01% {
      background-image: var(--wallpaper-1);
    }
    25% {
      background-image: var(--wallpaper-1);
    }
    25.01% {
      background-image: var(--wallpaper-2);
    }
    50% {
      background-image: var(--wallpaper-2);
    }
    50.01% {
      background-image: var(--wallpaper-3);
    }
    75% {
      background-image: var(--wallpaper-3);
    }
    75.01% {
      background-image: var(--wallpaper-0);
    }
    100% {
      background-image: var(--wallpaper-0);
    }
  }

  @keyframes fadeinout {
    0% {
      opacity: 0;
    }
    10% {
      opacity: 1;
    }
    95% {
      opacity: 1;
    }
    100% {
      opacity: 0;
    }
  }

  @keyframes panin {
    from {
      transform: scale(1);
    }
    to {
      transform: scale(1.03);
    }
  }
  #show-wallpaper {
    display: none;
  }

  #show-wallpaper:checked + #show-wallpaper-lbl b {
    display: inline;
  }

  #show-wallpaper:checked + #show-wallpaper-lbl strong {
    display: none;
  }

  #show-wallpaper-lbl {
    position: fixed;
    top: 100px;
    left: 0;
    z-index: 30;
    cursor: pointer;
    writing-mode: vertical-rl;
    text-orientation: sideways;
  }

  #show-wallpaper-lbl div {
    padding: 15px 1px;
    background-color: var(--bg-color-opacity);
  }

  #show-wallpaper:checked ~ #main-holder {
    display: none;
  }

  #show-wallpaper-lbl:hover ~ #main-holder {
    opacity: 0.4;
  }

  #show-wallpaper-lbl b {
    display: none;
  }

  .wallpaper {
    --wallpaper-bg-color: rgb(0, 0, 0);

    background-color: var(--wallpaper-bg-color);
    position: fixed;
    inset: 0;
    z-index: -10;
  }
  .wallpaper div {
    animation-name: wallpapers, fadeinout, panin;
    animation-duration: 32s, 8s, 8s;
    animation-iteration-count: infinite;
    animation-timing-function: linear;
    background-image: var(--wallpaper-0);

    background-repeat: no-repeat;
    background-position: 50% 0;
    background-size: cover;
    background-attachment: fixed;
    width: 100%;
    height: 100vmax;
  }

  /* Responsive */
  @media (max-width: 600px) {
    #show-wallpaper-lbl {
      writing-mode: horizontal-tb;
      top: 3px;
      left: 2px;
      right: 2px;
      text-align: center;
    }
    #show-wallpaper-lbl > div {
      padding: 14px;
    }

    #show-wallpaper-lbl:hover ~ #main-holder {
      opacity: 1;
    }
  }
</style>
